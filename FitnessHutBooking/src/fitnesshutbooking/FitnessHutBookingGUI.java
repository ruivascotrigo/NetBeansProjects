/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package fitnesshutbooking;

import java.util.Date;
import java.util.Vector;
import javax.swing.table.AbstractTableModel;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;

import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;


class MyTableModel extends AbstractTableModel {
    private final String[] columnNames = {"ClassId","Time","Name","Duration","Location","Book?"};
    private Vector<Vector> rowData = new Vector<Vector>();

    MyTableModel(Vector<Vector> rowData) {
        this.rowData = rowData;
    }

    public int getColumnCount() {
        return columnNames.length;
    }

    public int getRowCount() {
        return rowData.size();
    }

    public String getColumnName(int col) {
        return columnNames[col];
    }

    public Object getValueAt(int row, int col) {
        return rowData.elementAt(row).elementAt(col);
    }

    public Class getColumnClass(int c) {
        return getValueAt(0, c).getClass();
    }

    /*
     * Don't need to implement this method unless your table's
     * editable.
     */
    public boolean isCellEditable(int row, int col) {
        //Note that the data/cell address is constant,
        //no matter where the cell appears onscreen.
        if (col < 4) {
            return false;
        } else {
            return true;
        }
    }
    /*
     * Don't need to implement this method unless your table's
     * data can change.
     */
    public void setValueAt(Object value, int row, int col) {
        rowData.elementAt(row).set(col, value) ;
        fireTableCellUpdated(row, col);
    }

}

class DateRenderer extends DefaultTableCellRenderer {

    private SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");

    @Override
    public void setValue(Object value) {
        if ((value != null)) {
            value = sdf.format(value);
        }
        super.setValue(value);
    }
}




public class FitnessHutBookingGUI extends javax.swing.JFrame {
    FitnessHutBooking instanceOfFitnessHutBooking;
    Vector<Thread> classBookingThreads;
    
    /**
     * Creates new form FitnessHutBookingGUI
     */
    public FitnessHutBookingGUI() {
        instanceOfFitnessHutBooking = new FitnessHutBooking();
        classBookingThreads = new Vector<Thread>();
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2_GetClasses = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_username = new javax.swing.JTextField();
        jTextField3_password = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1_today = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2_tomorrow = new javax.swing.JTable();
        jToggleButton1StartClassBooking = new javax.swing.JToggleButton();
        jComboBox1 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2_GetClasses.setText("Get Classes");
        jButton2_GetClasses.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2_GetClassesMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("FitnessHut Automatic Booking System");

        jLabel3.setText("Username:");

        jLabel4.setText("Password:");

        jTextField_username.setText("ruivascotrigo@hotmail.com");
        jTextField_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_usernameActionPerformed(evt);
            }
        });

        jTextField3_password.setText("a#yQeZyMu");

        jTable1_today.setModel(new MyTableModel(this.instanceOfFitnessHutBooking.todayClasses));
        jTable1_today.getColumnModel().getColumn(1).setCellRenderer(new DateRenderer());
        jScrollPane1.setViewportView(jTable1_today);

        jTabbedPane1.addTab("Today", jScrollPane1);

        jTable2_tomorrow.setModel(new MyTableModel(this.instanceOfFitnessHutBooking.tomorrowClasses));
        jTable2_tomorrow.getColumnModel().getColumn(1).setCellRenderer(new DateRenderer());
        jScrollPane2.setViewportView(jTable2_tomorrow);

        jTabbedPane1.addTab("Tomorrow", jScrollPane2);

        jToggleButton1StartClassBooking.setText("Start Class Booking");
        jToggleButton1StartClassBooking.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jToggleButton1StartClassBookingItemStateChanged(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Amoreiras", "Cascais", "Trindade", "Arco do Cego", "Odivelas", "Braga", "Picoas" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField_username, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3_password, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jComboBox1, 0, 105, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2_GetClasses))
                            .addComponent(jToggleButton1StartClassBooking, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jTextField_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2_GetClasses)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jToggleButton1StartClassBooking)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2_GetClassesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2_GetClassesMouseClicked
        System.out.println("Clicked the get classes button");
        
        String user = this.jTextField_username.getText();
        String pass = this.jTextField3_password.getText();
        String locationId = Integer.toString( this.jComboBox1.getSelectedIndex() + 1 );
        
        Date today = new Date();    
        Date tomorrow = new Date(today.getTime() + (1000 * 60 * 60 * 24));
        String phpCookie = "";
        
        System.out.println("Trying to login");
        try {
            phpCookie = this.instanceOfFitnessHutBooking.loginHUT(user, pass);
            if ( phpCookie == "AuthFailed" || phpCookie == "" ){
                JOptionPane.showMessageDialog(null, "Login Falhou");
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(FitnessHutBookingGUI.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        
        try {
            if ( this.instanceOfFitnessHutBooking.getClassesHUT(phpCookie, locationId , today , this.instanceOfFitnessHutBooking.todayClasses ) == false ){
                JOptionPane.showMessageDialog(null, "Nao existe cookie");
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(FitnessHutBookingGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            if ( this.instanceOfFitnessHutBooking.getClassesHUT(phpCookie, locationId , tomorrow , this.instanceOfFitnessHutBooking.tomorrowClasses ) == false ){
                JOptionPane.showMessageDialog(null, "Nao existe cookie");
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(FitnessHutBookingGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        ((javax.swing.table.AbstractTableModel) this.jTable1_today.getModel()).fireTableDataChanged();
        ((javax.swing.table.AbstractTableModel) this.jTable2_tomorrow.getModel()).fireTableDataChanged();
    }//GEN-LAST:event_jButton2_GetClassesMouseClicked

    private void jToggleButton1StartClassBookingItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jToggleButton1StartClassBookingItemStateChanged
        String user = this.jTextField_username.getText();
        String pass = this.jTextField3_password.getText();
        
        if(evt.getStateChange() == java.awt.event.ItemEvent.SELECTED){
            
            for (int i = 0; i < this.jTable1_today.getRowCount(); ++i){
                Boolean classBookFlag = (Boolean) this.jTable1_today.getValueAt( i, this.jTable1_today.getColumnCount() - 1 );

                if ( classBookFlag ){
                    // {"ClassId","Time","Name","Duration","Location","Book?"};

                    String classId = (String) this.instanceOfFitnessHutBooking.todayClasses.get(i).get(0); //classId
                    Date classDate = (Date) this.instanceOfFitnessHutBooking.todayClasses.get(i).get(1); // Date and time of the class
                    final String classIdCopy = classId;
                    final Date classDateCopy = classDate;
                    final String userCopy = user;
                    final String passCopy = pass;

                    Thread t1 = new Thread(new Runnable() {
                        public void run(){
                            //while (true) {
                                try {
                                    FitnessHutBooking.bookClassThreadHut(userCopy, passCopy, classIdCopy, classDateCopy);
                                } catch (Exception ex) {
                                    Logger.getLogger(FitnessHutBookingGUI.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            //}
                        }});

                    classBookingThreads.add(t1);
                    t1.start();
                    //JOptionPane.showMessageDialog(null, "Class: " + classId + "\n\rThread: " + t1.getId()); 
                    System.out.println("Class: " + classId + " Thread: " + t1.getId());
                }

            }
            
            for (int i = 0; i < this.jTable2_tomorrow.getRowCount(); ++i){
                Boolean classBookFlag = (Boolean) this.jTable2_tomorrow.getValueAt( i, this.jTable2_tomorrow.getColumnCount() - 1 );

                if ( classBookFlag ){
                    // {"ClassId","Time","Name","Duration","Location","Book?"};

                    String classId = (String) this.instanceOfFitnessHutBooking.tomorrowClasses.get(i).get(0); //classId
                    Date classDate = (Date) this.instanceOfFitnessHutBooking.tomorrowClasses.get(i).get(1); // Date and time of the class
                    final String classIdCopy = classId;
                    final Date classDateCopy = classDate;
                    final String userCopy = user;
                    final String passCopy = pass;

                    Thread t1 = new Thread(new Runnable() {
                        public void run(){
                            try {
                                FitnessHutBooking.bookClassThreadHut(userCopy, passCopy, classIdCopy, classDateCopy);
                            } catch (Exception ex) {
                                Logger.getLogger(FitnessHutBookingGUI.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }});

                    classBookingThreads.add(t1);
                    t1.start();
                    //JOptionPane.showMessageDialog(null, "Class: " + classId + "\n\rThread: " + t1.getId()); 
                    System.out.println("Class: " + classId + " Thread: " + t1.getId());
                }

            }
            
            jToggleButton1StartClassBooking.setText("Stop Class Booking");
            //jTabbedPane1.setEnabled(false);
            jTable1_today.setEnabled(false);
            jTable2_tomorrow.setEnabled(false);      
            jTextField_username.setEnabled(false);
            jTextField3_password.setEnabled(false);
            jButton2_GetClasses.setEnabled(false);
        }
        else{
            // Kill existing class booking threads
            for (Thread t : classBookingThreads){
                //JOptionPane.showMessageDialog(null, "Interrupting thread: " + t.getId());
                System.out.println("Interrupting thread: " + t.getId());
                t.interrupt();
            }
            classBookingThreads.clear();
                    
            jToggleButton1StartClassBooking.setText("Start Class Booking");
            //jTabbedPane1.setEnabled(true);
            jTable1_today.setEnabled(true);
            jTable2_tomorrow.setEnabled(true);
            jTextField_username.setEnabled(true);
            jTextField3_password.setEnabled(true);
            jButton2_GetClasses.setEnabled(true);
        }
    }//GEN-LAST:event_jToggleButton1StartClassBookingItemStateChanged

    private void jTextField_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_usernameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2_GetClasses;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1_today;
    private javax.swing.JTable jTable2_tomorrow;
    private javax.swing.JTextField jTextField3_password;
    private javax.swing.JTextField jTextField_username;
    private javax.swing.JToggleButton jToggleButton1StartClassBooking;
    // End of variables declaration//GEN-END:variables
}
